{
    "sourceFile": "lib/Constance/Theme.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1682316795205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1682316795205,
            "name": "Commit-0",
            "content": "import 'package:lango/Constance/Constance.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:google_fonts/google_fonts.dart';\r\n\r\nclass AppTheme {\r\n  static bool isLightTheme = true;\r\n\r\n  static ThemeData getTheme() {\r\n    if (isLightTheme) {\r\n      return lightTheme();\r\n    } else {\r\n      return darkTheme();\r\n    }\r\n  }\r\n\r\n  static TextTheme _buildTextTheme(TextTheme base) {\r\n    return base.copyWith(\r\n      subtitle1: GoogleFonts.poppins(\r\n          textStyle: TextStyle(color: base.subtitle1!.color, fontSize: 15)),\r\n      subtitle2: GoogleFonts.poppins(\r\n          textStyle: TextStyle(\r\n              color: base.caption!.color,\r\n              fontSize: 15,\r\n              fontWeight: FontWeight.w500)),\r\n      bodyText1: GoogleFonts.poppins(\r\n          textStyle: TextStyle(color: base.bodyText1!.color, fontSize: 14)),\r\n      bodyText2: GoogleFonts.poppins(\r\n          textStyle: TextStyle(color: base.bodyText2!.color, fontSize: 16)),\r\n      button: GoogleFonts.poppins(\r\n          textStyle: TextStyle(\r\n              color: base.button!.color,\r\n              fontSize: 14,\r\n              fontWeight: FontWeight.w500)),\r\n      headline1: GoogleFonts.libreBaskerville(\r\n          textStyle: TextStyle(\r\n              color: base.subtitle1!.color,\r\n              fontSize: 15,\r\n              fontWeight: FontWeight.w500)),\r\n      caption: GoogleFonts.poppins(\r\n          textStyle: TextStyle(color: base.caption!.color, fontSize: 12)),\r\n      headline4: GoogleFonts.libreBaskerville(\r\n          textStyle: TextStyle(color: base.headline4!.color, fontSize: 24)),\r\n      headline3: GoogleFonts.libreBaskerville(\r\n          textStyle: TextStyle(\r\n              color: base.headline3!.color,\r\n              fontSize: 40,\r\n              fontWeight: FontWeight.w600)),\r\n      headline2: GoogleFonts.libreBaskerville(\r\n          textStyle: TextStyle(color: base.headline2!.color, fontSize: 60)),\r\n      headline5: GoogleFonts.libreBaskerville(\r\n          textStyle: TextStyle(\r\n              color: base.headline5!.color,\r\n              fontSize: 20.5,\r\n              fontWeight: FontWeight.w700)),\r\n      headline6: GoogleFonts.libreBaskerville(\r\n          textStyle: TextStyle(\r\n              color: base.headline6!.color,\r\n              fontSize: 20,\r\n              fontWeight: FontWeight.w500)),\r\n      overline: GoogleFonts.poppins(\r\n          textStyle: TextStyle(color: base.overline!.color, fontSize: 10)),\r\n    );\r\n  }\r\n\r\n  static ThemeData lightTheme() {\r\n    Color primaryColor = HexColor(primaryColorString);\r\n    Color secondaryColor = HexColor(secondaryColorString);\r\n    final ColorScheme colorScheme = ColorScheme.light().copyWith(\r\n      primary: secondaryColor,\r\n      secondary: Colors.white,\r\n    );\r\n\r\n    final ThemeData base = ThemeData.light();\r\n    return base.copyWith(\r\n      appBarTheme: AppBarTheme(color: Colors.white),\r\n      popupMenuTheme: PopupMenuThemeData(color: Colors.white),\r\n      iconTheme: IconThemeData(color: Color(0xff2b2b2b)),\r\n      colorScheme: colorScheme,\r\n      primaryColor: primaryColor,\r\n      buttonColor: primaryColor,\r\n      splashColor: Colors.white.withOpacity(0.1),\r\n      hoverColor: Colors.transparent,\r\n      splashFactory: InkRipple.splashFactory,\r\n      highlightColor: Colors.transparent,\r\n      accentColor: primaryColor,\r\n      canvasColor: Colors.transparent,\r\n      scaffoldBackgroundColor: Colors.white,\r\n      backgroundColor: Colors.white,\r\n      errorColor: Colors.red,\r\n      textTheme: _buildTextTheme(base.textTheme),\r\n      primaryTextTheme: _buildTextTheme(base.textTheme),\r\n      accentTextTheme: _buildTextTheme(base.accentTextTheme),\r\n      platform: TargetPlatform.iOS,\r\n      indicatorColor: primaryColor,\r\n      disabledColor: HexColor(\"#9CA3AF\"),\r\n      buttonTheme: ButtonThemeData(\r\n        colorScheme: colorScheme,\r\n        textTheme: ButtonTextTheme.primary,\r\n      ),\r\n      cardColor: Colors.white,\r\n    );\r\n  }\r\n\r\n  static ThemeData darkTheme() {\r\n    Color primaryColor = HexColor(primaryColorString);\r\n    Color secondaryColor = HexColor(secondaryColorString);\r\n    final ColorScheme colorScheme = ColorScheme.dark().copyWith(\r\n      primary: primaryColor,\r\n      secondary: secondaryColor,\r\n    );\r\n    final ThemeData base = ThemeData.dark();\r\n    return base.copyWith(\r\n      appBarTheme: AppBarTheme(color: Colors.grey[700]),\r\n      popupMenuTheme: PopupMenuThemeData(color: Colors.black),\r\n      colorScheme: colorScheme,\r\n      iconTheme: IconThemeData(color: Colors.white),\r\n      primaryColor: primaryColor,\r\n      buttonColor: primaryColor,\r\n      indicatorColor: Colors.white,\r\n      splashColor: Colors.white24,\r\n      splashFactory: InkRipple.splashFactory,\r\n      accentColor: secondaryColor,\r\n      canvasColor: Colors.transparent,\r\n      backgroundColor: Color(0xff1c1d21),\r\n      scaffoldBackgroundColor: Color(0xff111827),\r\n      buttonTheme: ButtonThemeData(\r\n        colorScheme: colorScheme,\r\n        textTheme: ButtonTextTheme.primary,\r\n      ),\r\n      textTheme: _buildTextTheme(base.textTheme),\r\n      primaryTextTheme: _buildTextTheme(base.primaryTextTheme),\r\n      accentTextTheme: _buildTextTheme(base.accentTextTheme),\r\n      platform: TargetPlatform.iOS,\r\n      disabledColor: HexColor(\"#6B7280\"),\r\n      cardColor: HexColor(\"#23262F\"),\r\n    );\r\n  }\r\n}\r\n\r\nclass HexColor extends Color {\r\n  static int _getColorFromHex(String hexColor) {\r\n    hexColor = hexColor.toUpperCase().replaceAll(\"#\", \"\");\r\n    if (hexColor.length == 6) {\r\n      hexColor = \"FF\" + hexColor;\r\n    }\r\n    return int.parse(hexColor, radix: 16);\r\n  }\r\n\r\n  HexColor(final String hexColor) : super(_getColorFromHex(hexColor));\r\n}"
        }
    ]
}