{
    "sourceFile": "lib/main.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1682273546799,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1682275406346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import 'package:flutter/material.dart';\r\n import 'package:flutter/services.dart';\r\n import 'package:lango/Constance/Theme.dart';\r\n+import 'package:lango/Dashboard/Dashboard.dart';\r\n import 'package:get/get_navigation/src/root/get_material_app.dart';\r\n \r\n Future<void> main() async {\r\n   WidgetsFlutterBinding.ensureInitialized();\r\n@@ -57,15 +58,22 @@\n     );\r\n     return GetMaterialApp(\r\n       scrollBehavior: const ScrollBehavior(\r\n           androidOverscrollIndicator: AndroidOverscrollIndicator.stretch),\r\n-      title: \"Lango\",\r\n+      title: \"E-Dumy\",\r\n       navigatorKey: NavKey.navKey,\r\n       theme: AppTheme.getTheme(),\r\n       debugShowCheckedModeBanner: false,\r\n+      routes: routes,\r\n       // home: TableContentsListviewScreen(),\r\n     );\r\n   }\r\n+\r\n+  var routes = <String, WidgetBuilder>{\r\n+    // Routes.SPLASH: (BuildContext context) => SplashScreen(),\r\n+    // Routes.INTRODUCTION: (BuildContext context) => OnBoardingScreen(),\r\n+    Routes.HOME: (BuildContext context) => DashboardScreen(),\r\n+  };\r\n }\r\n \r\n class Routes {\r\n   static String SPLASH = \"/\";\r\n"
                },
                {
                    "date": 1682276425978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,84 +3,18 @@\n import 'package:lango/Constance/Theme.dart';\r\n import 'package:lango/Dashboard/Dashboard.dart';\r\n import 'package:get/get_navigation/src/root/get_material_app.dart';\r\n \r\n-Future<void> main() async {\r\n-  WidgetsFlutterBinding.ensureInitialized();\r\n-  SystemChrome.setPreferredOrientations([\r\n-    DeviceOrientation.portraitUp,\r\n-    DeviceOrientation.portraitDown,\r\n-  ]).then(\r\n-    (_) => runApp(const MyApp()),\r\n-  );\r\n+void main() {\r\n+  runApp(MyApp());\r\n }\r\n \r\n-class MyApp extends StatefulWidget {\r\n-  static setCustomeTheme(BuildContext context, int index) {\r\n-    final _MyAppState? state = context.findAncestorStateOfType<_MyAppState>();\r\n-    state!.setCustomeTheme(index);\r\n-  }\r\n-\r\n+class MyApp extends StatelessWidget {\r\n   const MyApp({Key? key}) : super(key: key);\r\n \r\n   @override\r\n-  State<MyApp> createState() => _MyAppState();\r\n-}\r\n-\r\n-class _MyAppState extends State<MyApp> {\r\n-  setCustomeTheme(int index) {\r\n-    if (index == 6) {\r\n-      setState(() {\r\n-        AppTheme.isLightTheme = true;\r\n-      });\r\n-    } else if (index == 7) {\r\n-      setState(() {\r\n-        AppTheme.isLightTheme = false;\r\n-      });\r\n-    } else {}\r\n-  }\r\n-\r\n-  @override\r\n   Widget build(BuildContext context) {\r\n-    Future.delayed(const Duration(milliseconds: 1)).then(\r\n-      (value) => SystemChrome.setSystemUIOverlayStyle(\r\n-        SystemUiOverlayStyle(\r\n-          statusBarColor: Colors.transparent,\r\n-          statusBarIconBrightness:\r\n-              AppTheme.isLightTheme ? Brightness.dark : Brightness.light,\r\n-          statusBarBrightness:\r\n-              AppTheme.isLightTheme ? Brightness.light : Brightness.dark,\r\n-          systemNavigationBarColor: Colors.black,\r\n-          systemNavigationBarDividerColor: Colors.grey,\r\n-          systemNavigationBarIconBrightness:\r\n-              AppTheme.isLightTheme ? Brightness.dark : Brightness.light,\r\n-        ),\r\n-      ),\r\n+    return MaterialApp(\r\n+        theme: ThemeData(accentColor: HexColor(\"\")), home: DashboardScreen(),\r\n     );\r\n-    return GetMaterialApp(\r\n-      scrollBehavior: const ScrollBehavior(\r\n-          androidOverscrollIndicator: AndroidOverscrollIndicator.stretch),\r\n-      title: \"E-Dumy\",\r\n-      navigatorKey: NavKey.navKey,\r\n-      theme: AppTheme.getTheme(),\r\n-      debugShowCheckedModeBanner: false,\r\n-      routes: routes,\r\n-      // home: TableContentsListviewScreen(),\r\n-    );\r\n   }\r\n-\r\n-  var routes = <String, WidgetBuilder>{\r\n-    // Routes.SPLASH: (BuildContext context) => SplashScreen(),\r\n-    // Routes.INTRODUCTION: (BuildContext context) => OnBoardingScreen(),\r\n-    Routes.HOME: (BuildContext context) => DashboardScreen(),\r\n-  };\r\n }\r\n-\r\n-class Routes {\r\n-  static String SPLASH = \"/\";\r\n-  static const String INTRODUCTION = \"/Splash/onboarding\";\r\n-  static const String HOME = \"/home/home_screen\";\r\n-}\r\n-\r\n-class NavKey {\r\n-  static final navKey = GlobalKey<NavigatorState>();\r\n-}\r\n"
                },
                {
                    "date": 1682276600101,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,21 +1,115 @@\n import 'package:flutter/material.dart';\r\n-import 'package:flutter/services.dart';\r\n-import 'package:lango/Constance/Theme.dart';\r\n-import 'package:lango/Dashboard/Dashboard.dart';\r\n-import 'package:get/get_navigation/src/root/get_material_app.dart';\r\n \r\n void main() {\r\n-  runApp(MyApp());\r\n+  runApp(const MyApp());\r\n }\r\n \r\n class MyApp extends StatelessWidget {\r\n-  const MyApp({Key? key}) : super(key: key);\r\n+  const MyApp({super.key});\r\n \r\n+  // This widget is the root of your application.\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return MaterialApp(\r\n-      theme: ThemeData(accentColor: HexColor(\"\")),\r\n-      home: DashboardScreen(),\r\n+      title: 'Flutter Demo',\r\n+      theme: ThemeData(\r\n+        // This is the theme of your application.\r\n+        //\r\n+        // Try running your application with \"flutter run\". You'll see the\r\n+        // application has a blue toolbar. Then, without quitting the app, try\r\n+        // changing the primarySwatch below to Colors.green and then invoke\r\n+        // \"hot reload\" (press \"r\" in the console where you ran \"flutter run\",\r\n+        // or simply save your changes to \"hot reload\" in a Flutter IDE).\r\n+        // Notice that the counter didn't reset back to zero; the application\r\n+        // is not restarted.\r\n+        primarySwatch: Colors.blue,\r\n+      ),\r\n+      home: const MyHomePage(title: 'Flutter Demo Home Page'),\r\n     );\r\n   }\r\n }\r\n+\r\n+class MyHomePage extends StatefulWidget {\r\n+  const MyHomePage({super.key, required this.title});\r\n+\r\n+  // This widget is the home page of your application. It is stateful, meaning\r\n+  // that it has a State object (defined below) that contains fields that affect\r\n+  // how it looks.\r\n+\r\n+  // This class is the configuration for the state. It holds the values (in this\r\n+  // case the title) provided by the parent (in this case the App widget) and\r\n+  // used by the build method of the State. Fields in a Widget subclass are\r\n+  // always marked \"final\".\r\n+\r\n+  final String title;\r\n+\r\n+  @override\r\n+  State<MyHomePage> createState() => _MyHomePageState();\r\n+}\r\n+\r\n+class _MyHomePageState extends State<MyHomePage> {\r\n+  int _counter = 0;\r\n+\r\n+  void _incrementCounter() {\r\n+    setState(() {\r\n+      // This call to setState tells the Flutter framework that something has\r\n+      // changed in this State, which causes it to rerun the build method below\r\n+      // so that the display can reflect the updated values. If we changed\r\n+      // _counter without calling setState(), then the build method would not be\r\n+      // called again, and so nothing would appear to happen.\r\n+      _counter++;\r\n+    });\r\n+  }\r\n+\r\n+  @override\r\n+  Widget build(BuildContext context) {\r\n+    // This method is rerun every time setState is called, for instance as done\r\n+    // by the _incrementCounter method above.\r\n+    //\r\n+    // The Flutter framework has been optimized to make rerunning build methods\r\n+    // fast, so that you can just rebuild anything that needs updating rather\r\n+    // than having to individually change instances of widgets.\r\n+    return Scaffold(\r\n+      appBar: AppBar(\r\n+        // Here we take the value from the MyHomePage object that was created by\r\n+        // the App.build method, and use it to set our appbar title.\r\n+        title: Text(widget.title),\r\n+      ),\r\n+      body: Center(\r\n+        // Center is a layout widget. It takes a single child and positions it\r\n+        // in the middle of the parent.\r\n+        child: Column(\r\n+          // Column is also a layout widget. It takes a list of children and\r\n+          // arranges them vertically. By default, it sizes itself to fit its\r\n+          // children horizontally, and tries to be as tall as its parent.\r\n+          //\r\n+          // Invoke \"debug painting\" (press \"p\" in the console, choose the\r\n+          // \"Toggle Debug Paint\" action from the Flutter Inspector in Android\r\n+          // Studio, or the \"Toggle Debug Paint\" command in Visual Studio Code)\r\n+          // to see the wireframe for each widget.\r\n+          //\r\n+          // Column has various properties to control how it sizes itself and\r\n+          // how it positions its children. Here we use mainAxisAlignment to\r\n+          // center the children vertically; the main axis here is the vertical\r\n+          // axis because Columns are vertical (the cross axis would be\r\n+          // horizontal).\r\n+          mainAxisAlignment: MainAxisAlignment.center,\r\n+          children: <Widget>[\r\n+            const Text(\r\n+              'You have pushed the button this many times:',\r\n+            ),\r\n+            Text(\r\n+              '$_counter',\r\n+              style: Theme.of(context).textTheme.headlineMedium,\r\n+            ),\r\n+          ],\r\n+        ),\r\n+      ),\r\n+      floatingActionButton: FloatingActionButton(\r\n+        onPressed: _incrementCounter,\r\n+        tooltip: 'Increment',\r\n+        child: const Icon(Icons.add),\r\n+      ), // This trailing comma makes auto-formatting nicer for build methods.\r\n+    );\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1682281993997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import 'package:flutter/material.dart';\r\n+import 'package:lango/Dashboard/Dashboard.dart';\r\n \r\n void main() {\r\n   runApp(const MyApp());\r\n }\r\n@@ -21,11 +22,11 @@\n         // \"hot reload\" (press \"r\" in the console where you ran \"flutter run\",\r\n         // or simply save your changes to \"hot reload\" in a Flutter IDE).\r\n         // Notice that the counter didn't reset back to zero; the application\r\n         // is not restarted.\r\n-        primarySwatch: Colors.blue,\r\n+        primarySwatch: Colors.blueGrey\r\n       ),\r\n-      home: const MyHomePage(title: 'Flutter Demo Home Page'),\r\n+      home: DashboardScreen(),\r\n     );\r\n   }\r\n }\r\n \r\n"
                }
            ],
            "date": 1682273546799,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\nimport 'package:flutter/services.dart';\r\nimport 'package:lango/Constance/Theme.dart';\r\nimport 'package:get/get_navigation/src/root/get_material_app.dart';\r\n\r\nFuture<void> main() async {\r\n  WidgetsFlutterBinding.ensureInitialized();\r\n  SystemChrome.setPreferredOrientations([\r\n    DeviceOrientation.portraitUp,\r\n    DeviceOrientation.portraitDown,\r\n  ]).then(\r\n    (_) => runApp(const MyApp()),\r\n  );\r\n}\r\n\r\nclass MyApp extends StatefulWidget {\r\n  static setCustomeTheme(BuildContext context, int index) {\r\n    final _MyAppState? state = context.findAncestorStateOfType<_MyAppState>();\r\n    state!.setCustomeTheme(index);\r\n  }\r\n\r\n  const MyApp({Key? key}) : super(key: key);\r\n\r\n  @override\r\n  State<MyApp> createState() => _MyAppState();\r\n}\r\n\r\nclass _MyAppState extends State<MyApp> {\r\n  setCustomeTheme(int index) {\r\n    if (index == 6) {\r\n      setState(() {\r\n        AppTheme.isLightTheme = true;\r\n      });\r\n    } else if (index == 7) {\r\n      setState(() {\r\n        AppTheme.isLightTheme = false;\r\n      });\r\n    } else {}\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    Future.delayed(const Duration(milliseconds: 1)).then(\r\n      (value) => SystemChrome.setSystemUIOverlayStyle(\r\n        SystemUiOverlayStyle(\r\n          statusBarColor: Colors.transparent,\r\n          statusBarIconBrightness:\r\n              AppTheme.isLightTheme ? Brightness.dark : Brightness.light,\r\n          statusBarBrightness:\r\n              AppTheme.isLightTheme ? Brightness.light : Brightness.dark,\r\n          systemNavigationBarColor: Colors.black,\r\n          systemNavigationBarDividerColor: Colors.grey,\r\n          systemNavigationBarIconBrightness:\r\n              AppTheme.isLightTheme ? Brightness.dark : Brightness.light,\r\n        ),\r\n      ),\r\n    );\r\n    return GetMaterialApp(\r\n      scrollBehavior: const ScrollBehavior(\r\n          androidOverscrollIndicator: AndroidOverscrollIndicator.stretch),\r\n      title: \"Lango\",\r\n      navigatorKey: NavKey.navKey,\r\n      theme: AppTheme.getTheme(),\r\n      debugShowCheckedModeBanner: false,\r\n      // home: TableContentsListviewScreen(),\r\n    );\r\n  }\r\n}\r\n\r\nclass Routes {\r\n  static String SPLASH = \"/\";\r\n  static const String INTRODUCTION = \"/Splash/onboarding\";\r\n  static const String HOME = \"/home/home_screen\";\r\n}\r\n\r\nclass NavKey {\r\n  static final navKey = GlobalKey<NavigatorState>();\r\n}\r\n"
        }
    ]
}